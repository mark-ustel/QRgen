[{"name":"app.R","content":"library(shiny)\r\nlibrary(bslib)\r\nlibrary(shinyWidgets)\r\nlibrary(qrcode)\r\nlibrary(colourpicker)\r\nlibrary(ggplot2)\r\n\r\n# Workaround for Chromium Issue 468227\r\ndownloadButton <- function(...) {\r\n  tag <- shiny::downloadButton(...)\r\n  tag$attribs$download <- NULL\r\n  tag\r\n}\r\n\r\ncss <- \"\r\nbody {\r\n  height: 100vh;\r\n  margin: 0;\r\n  padding: 0;\r\n  background: linear-gradient(130deg,\r\n    rgba(108, 128, 255, 0.6) 0%, \r\n    rgba(173, 216, 230, 0.5) 50%, \r\n    rgba(144, 238, 144, 0.4) 100% );\r\n  overflow: hidden;\r\n}\r\n\r\n.container {\r\n  height: 100vh;\r\n  width: calc(100% + 40px);\r\n  margin-left: -20px;\r\n  margin-right: -20px;\r\n  display: grid;\r\n  grid-template-areas:\r\n    'sidebar_upper main sidebar_right'\r\n    'sidebar_lower main sidebar_right'\r\n    '. footer .';\r\n  gap: 50px;\r\n  padding: 90px;\r\n  grid-template-columns: 3fr 8fr 2fr;\r\n  grid-template-rows: 450px 130px 20px;\r\n  animation: fadeInOutBackground 10s ease-in-out infinite;\r\n}\r\n\r\n@keyframes fadeInOutBackground {\r\n  0%, 100% {\r\n    background: rgba(255,0,0, 0.15);\r\n  }\r\n  50% {\r\n    background: rgba(255,0,0, 0);\r\n  }\r\n}\r\n\r\n.container > div {\r\n  background: rgb(240,240,240);\r\n  border-radius: 30px;\r\n  padding: 30px;\r\n} \r\n\r\n.main {\r\n  margin-top: 30px;\r\n  margin-bottom:40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.footer {\r\n  background: none !important;\r\n  border-radius: 0 !important;\r\n  padding: 0 !important;\r\n  margin-top: -160px;\r\n  color: white;\r\n  font-weight: bold !important;\r\n  text-align: center !important;\r\n}\r\n\r\nh3 {\r\n  font-weight: 600;\r\n}\r\n\r\n.sidebar_right {\r\n  text-align: center;\r\n}\r\n\r\n.icon_col {\r\n  color: #555654;\r\n  color: #666;\r\n}\r\n\r\n#btn_colour {\r\n  color: #6495ED;\r\n}\r\n\r\n.spacing {\r\n  height: 12px;\r\n}\r\n.spacing-sm {\r\n  height:6px;\r\n}\r\n.spacing-lg {\r\n  height: 28px;\r\n}\r\n\r\n.center_button {\r\n  width: 100%;\r\n}\r\n\r\n.heading {\r\n  color: #A9A9A9;\r\n}\r\n\r\n#btn1 {\r\n  color: #FBCEB1;\r\n}\r\n\r\n#btn2 {\r\n  color: #B5A2D9;\r\n}\r\n\r\n#btn3 {\r\n  color: #C8EBBB;\r\n}\r\n\r\n#btn4 {\r\n  color: #92B5F2;\r\n}\r\n\r\n#btn5 {\r\n  color: #ffcaca;\r\n  animation: pulseGlow 5s infinite;\r\n}\r\n\r\n@keyframes pulseGlow {\r\n  0%,100% {\r\n    box-shadow: 0 0 5px #FFCACA, 0 0 10px #FFCACA, 0 0 15px #FFCACA, 0 0 20px #FFCACA;\r\n  }\r\n  50% {\r\n    box-shadow: 0 0 5px #FFCACA;\r\n  }\r\n}\r\n\"\r\n\r\nui <- fluidPage(\r\n  \r\n  tags$head(\r\n    # Link to the CSS code\r\n    tags$style(HTML(css)),\r\n    # Enable fontawesome\r\n    tags$link(rel = \"stylesheet\", href = \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\")\r\n  ),\r\n  \r\n  # Container\r\n  tags$div(class=\"container\",\r\n           # Left Sidebar Upper\r\n           tags$div(class=\"sidebar_upper\", style=\"grid-area:sidebar_upper;\",\r\n                    tags$div(class=\"spacing-lg\"),\r\n                    textInput(inputId = \"link\", \r\n                              label = NULL, \r\n                              placeholder = \"Enter your link here\", \r\n                              value = \"www.ustelstudio.co.uk\"),\r\n                    tags$div(class=\"spacing-lg\"),\r\n                    colourpicker::colourInput(inputId = \"bg_colour\",\r\n                                label = NULL,\r\n                                palette = \"square\",\r\n                                showColour = \"both\",\r\n                                returnName = TRUE,\r\n                                value = \"white\"),\r\n                    tags$div(class=\"spacing-lg\"),\r\n                    colourpicker::colourInput(inputId = \"qr_colour\",\r\n                                label = NULL,\r\n                                palette = \"square\",\r\n                                showColour = \"both\",\r\n                                returnName = TRUE,\r\n                                value = \"cornflowerblue\"),\r\n                    tags$div(class=\"spacing-lg\"),\r\n                    radioGroupButtons(\r\n                      inputId = \"data_shape\",\r\n                      label = NULL,\r\n                      size = \"sm\",\r\n                      checkIcon = list(\r\n                        yes = icon(\"ok\",\r\n                                   lib = \"glyphicon\")),\r\n                      choices = c(`<i class='fa-solid fa-square icon_col'><\/i>` = 22,\r\n                                  `<i class='fa-solid fa-circle icon_col'><\/i>` = 21,\r\n                                  `<i class='fa-solid fa-diamond icon_col'><\/i>` = 23),\r\n                      justified = TRUE\r\n                    ),\r\n                    tags$div(class=\"spacing-lg\"),\r\n                    radioGroupButtons(\r\n                      inputId = \"data_size\",\r\n                      label = NULL,\r\n                      size = \"sm\",\r\n                      selected = 7,\r\n                      checkIcon = list(\r\n                        yes = icon(\"ok\",\r\n                                   lib = \"glyphicon\")),\r\n                      choices = c(`<i class='fa-solid fa-s icon_col'><\/i>` = 6,\r\n                                  `<i class='fa-solid fa-m icon_col'><\/i>` = 7,\r\n                                  `<i class='fa-solid fa-l icon_col'><\/i>` = 8),\r\n                      justified = TRUE\r\n                    ) ),\r\n           # Left Sidebar Lower\r\n           tags$div(class=\"sidebar_lower\", style=\"grid-area:sidebar_lower;\",\r\n                    tags$div(class=\"spacing\"),tags$div(class=\"spacing-sm\"),\r\n                    downloadButton(outputId = \"downloadData\", \r\n                                 label = \"Download\", \r\n                                 class = \"center_button\", \r\n                                 icon = shiny::icon(\"download\") \r\n                  )\r\n                  ),\r\n           # Main Plot Area\r\n           tags$div(class=\"main\", style=\"grid-area:main;\",\r\n                    plotOutput(\"tplot\",\r\n                               width = 400,\r\n                               height = 400) ),\r\n           # Right Sidebar\r\n           tags$div(class=\"sidebar_right\", style=\"grid-area:sidebar_right;\",\r\n                    # Colours\r\n                    tags$h5(\"Colour Guide\", class=\"heading\"), \r\n                    tags$div(class=\"spacing-sm\"),\r\n                    circleButton(inputId = \"btn1\", icon = icon(\"paintbrush\"), onclick = \"window.open('https://r-charts.com/colors/', '_blank')\" ),\r\n                    tags$div(class=\"spacing-lg\"),\r\n                    # Website\r\n                    tags$h5(\"Visit My Website\", class=\"heading\"), \r\n                    tags$div(class=\"spacing-sm\"),\r\n                    circleButton(inputId = \"btn2\", icon = icon(\"globe\"), onclick = \"window.open('https://ustelstudio.co.uk/', '_blank')\" ),\r\n                    tags$div(class=\"spacing-lg\"),\r\n                    # Email\r\n                    tags$h5(\"Contact Me\", class=\"heading\"), \r\n                    tags$div(class=\"spacing-sm\"),\r\n                    circleButton(inputId = \"btn3\", icon = icon(\"envelope\"), onclick = \"window.open('mailto:contact@ustelstudio.co.uk?cc=mark@ustelstudio.co.uk&subject=QR Code Generator', '_self')\" ),\r\n                    tags$div(class=\"spacing-lg\"),\r\n                    # LinkedIn \r\n                    tags$h5(\"Connect\", class=\"heading\"),\r\n                    tags$div(class=\"spacing-sm\"),\r\n                    circleButton(inputId = \"btn4\", icon = icon(\"linkedin-in\"), onclick = \"window.open('https://www.linkedin.com/in/mark-ustel-1342b067/', '_blank')\" ),\r\n                    tags$div(class=\"spacing-lg\"),\r\n                    # Buy Me a Coffee\r\n                    tags$h5(\"Support Me\", class=\"heading\"),\r\n                    tags$div(class=\"spacing-sm\"),\r\n                    circleButton(inputId = \"btn5\", icon = icon(\"hand-holding-heart\"), onclick = \"window.open('https://buymeacoffee.com/ustelstudio', '_blank')\" )\r\n                    ),\r\n           # Footer\r\n           tags$div(class=\"footer\", style=\"grid-area:footer;\",\r\n                    tags$h3(\"created by Ustel Studio\"))\r\n           )\r\n  \r\n)\r\n\r\n\r\nserver <- function(input, output) {\r\n\r\n  # Generate the plot in a reactive element\r\n  tplot <- reactive({\r\n      # Generate the QR code data\r\n      qr_data <- qr_code(input$link)\r\n      qr_matrix <- as.matrix(qr_data)\r\n\r\n      # Convert the matrix to a data frame\r\n      qr_df <- as.data.frame(which(qr_matrix == 1, arr.ind = TRUE))\r\n      names(qr_df) <- c(\"x\", \"y\")\r\n      qr_df$y <- -qr_df$y  # Invert y-axis for correct orientation\r\n\r\n      # Function to determine if a point is in one of the eyes\r\n      is_eye <- function(x, y, size, size2) {\r\n        (\r\n          (x <= size & y >= -size) |  # Top-left\r\n            (x >= max(qr_df$x) - size2 & y >= -size) |  # Top-right\r\n            (x <= size & y <= min(qr_df$y) + size2)  # Bottom-left\r\n        )\r\n      }\r\n\r\n      # Apply the eye function\r\n      qr_df$eye <- mapply(is_eye, qr_df$x, qr_df$y, size = 10, size2 = 7-1)\r\n      \r\n      # Size adjustment for ggplot data point dedpending on input length\r\n      size_adjustment <- ifelse(nchar(input$link) <= 20, 1,\r\n                                ifelse(nchar(input$link) <= 50, 0,\r\n                                       ifelse(nchar(input$link) <= 100, -1,\r\n                                              ifelse(nchar(input$link) <= 150, -2,\r\n                                                     ifelse(nchar(input$link) <= 200, -3, -4)))))\r\n      \r\n\r\n      # Create the plot\r\n      ggplot() +\r\n        geom_point(data = subset(qr_df, !eye), aes(x = x, y = y),\r\n                   shape = as.integer(input$data_shape),\r\n                   size = as.integer(input$data_size) + size_adjustment,\r\n                   fill = input$qr_colour,\r\n                   color = input$qr_colour\r\n                   ) +\r\n        geom_rect(data = subset(qr_df, eye), aes(xmin = x - 0.5, xmax = x + 0.5, ymin = y - 0.5, ymax = y + 0.5),\r\n                  fill = input$qr_colour,\r\n                  color = input$qr_colour\r\n                  ) +\r\n        coord_fixed() +\r\n        theme_void() +\r\n        theme(plot.background = element_rect(\r\n          fill = input$bg_colour,\r\n          colour = input$bg_colour\r\n          )\r\n        )\r\n  })\r\n  \r\n  # Render the plot\r\n  output$tplot <- renderPlot({\r\n    req(tplot())\r\n    tplot()\r\n  })\r\n\r\n  # Download the plot\r\n  output$downloadData <- downloadHandler(\r\n    file = function() {\r\n      \"free_QR_code.png\"\r\n    },\r\n    content = function(file) {\r\n      ggsave(file, plot = last_plot(), width = 6, height = 6, dpi = 300)\r\n    }\r\n  )\r\n\r\n}\r\n\r\n# Launch the app\r\nshinyApp(ui = ui, server = server)\r\n\r\n# Export and run locally\r\n# library(shinylive)\r\n# library(httpuv)\r\n# shinylive::export(\"sample\", \"shinylive\")\r\n# httpuv::runStaticServer(\"shinylive\")","type":"text"}]
